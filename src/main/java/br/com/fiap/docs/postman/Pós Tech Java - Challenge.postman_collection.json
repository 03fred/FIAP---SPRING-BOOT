{
	"info": {
		"_postman_id": "2647e059-8aca-401f-ab18-29fcd6fc88d0",
		"name": "P√≥s Tech Java - Challenge",
		"description": "### üîê Autentica√ß√£o\n\nEsta API utiliza **JWT (JSON Web Token)** para autentica√ß√£o. O token √© obtido via login e inclu√≠do automaticamente nas requisi√ß√µes atrav√©s de vari√°vel de cole√ß√£o.\n\nüåê **Base URL**  \n`http://localhost:8080`\n\nüìå **Endpoints Dispon√≠veis**\n\n- `POST /users` ‚Äî Criar novo usu√°rio\n    \n- `POST /auth` ‚Äî Login do usu√°rio\n    \n- `PUT /users/{id}` ‚Äî Atualizar usu√°rio _(requer token)_\n    \n- `DELETE /users/{id}` ‚Äî Deletar usu√°rio _(requer token)_\n    \n- `GET /users` ‚Äî Listar todos os usu√°rios _(requer token)_\n    \n- `GET /users/{id}` ‚Äî Buscar usu√°rio por ID _(requer token)_",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46899537",
		"_collection_link": "https://fred-324508.postman.co/workspace/Personal-Workspace~f969967c-ca59-4fe8-9f34-86537053a155/collection/46899537-2647e059-8aca-401f-ab18-29fcd6fc88d0?action=share&source=collection_link&creator=46899537"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "ADMIN",
					"item": []
				},
				{
					"name": "Criar Usu√°rio",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"paulo@gmail.com\",\r\n    \"password\": \"123456A78\",\r\n    \"name\": \"Paulo Moura\",\r\n    \"address\": \"Rua S√£o Jos√©, casa 1\",\r\n    \"login\": \"Paulo123\"\r\n} ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/users/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"users",
								"create"
							]
						},
						"description": "## üÜï Criar Usu√°rio\n\n**POST /users**\n\nCria um novo usu√°rio na base de dados.\n\nüîì **N√£o requer autentica√ß√£o**"
					},
					"response": []
				},
				{
					"name": "Alterar Usu√°rio",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"lk@gmail.com\",\r\n    \"password\": \"12345678\",\r\n    \"name\": \"Lucca Meurer\",\r\n    \"address\": \"Rua 1, que fica ao lado da rua 2\",\r\n    \"login\": \"LUK\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/users/update/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"users",
								"update",
								"1"
							]
						},
						"description": "## üîÑ Alterar Usu√°rio\n\n**PUT /users/{id}**\n\nAtualiza os dados de um usu√°rio j√° existente com base no ID informado.\n\nüîê **Requer token JWT**"
					},
					"response": []
				},
				{
					"name": "Alterar Individual",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"lk@gmail.com\",\r\n    \"password\": \"123456781a\",\r\n    \"name\": \"Lucca Meurer\",\r\n    \"address\": \"Rua 2, que fica ao lado da rua 2\",\r\n    \"login\": \"LUK\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"users"
							]
						},
						"description": "## üîÑ Alterar Usu√°rio\n\n**PUT /users/{id}**\n\nAtualiza os dados de um usu√°rio j√° existente com base no ID informado.\n\nüîê **Requer token JWT**"
					},
					"response": []
				},
				{
					"name": "Deletar Usu√°rio",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/users/8",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"users",
								"8"
							]
						},
						"description": "## üóëÔ∏è Deletar Usu√°rio\n\n**DELETE /users/{id}**\n\nRemove um usu√°rio existente com base no **ID** informado.\n\nüîê **Requer token JWT**"
					},
					"response": []
				},
				{
					"name": "Listar Todos Usu√°rios",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/users/all?page=0&size=20&sort=id,desc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"users",
								"all"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "20"
								},
								{
									"key": "sort",
									"value": "id,desc"
								}
							]
						},
						"description": "## üìãListar Todos os Usu√°rios\n\n**GET /users**\n\nRetorna a lista de todos os usu√°rios cadastrados com pagina√ß√£o e ordena√ß√£o.\n\nüîê **Requer token JWT**\n\n**Par√¢metros:**\n\n- `page` ‚Äì n√∫mero da p√°gina (ex: 0)\n    \n- `size` ‚Äì quantidade de itens por p√°gina (ex: 20)\n    \n- `sort` ‚Äì campo de ordena√ß√£o (ex: `id,desc`)"
					},
					"response": []
				},
				{
					"name": "Ler Usu√°rio Espec√≠fico",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/users/6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"users",
								"6"
							]
						},
						"description": "## üîé Ler Usu√°rio Espec√≠fico\n\n**GET /users/{id}**\n\nRetorna os dados de um √∫nico usu√°rio com base no **ID** informado.\n\nüîê **Requer token JWT**"
					},
					"response": []
				},
				{
					"name": "Alterar Senha",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"oldPassword\": \"12345678\",\r\n  \"newPassword\": \"Lucca100\",\r\n  \"confirmPassword\": \"Lucca100\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/users/update-password/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"users",
								"update-password",
								"1"
							]
						},
						"description": "### üîÑ üîí Alterar Senha do Usu√°rio\n\n**PATCH** `/users/password/{id}`\n\nPermite que o usu√°rio altere sua senha informando a senha atual e a nova senha com confirma√ß√£o.\n\nüîê **Requer token JWT**"
					},
					"response": []
				},
				{
					"name": "Alterar Usu√°rio Parcialmente",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Lucca\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/users/update-partial/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"users",
								"update-partial",
								"1"
							]
						},
						"description": "### üîÑ Atualiza√ß√£o Parcial de Usu√°rio\n\n**PATCH** `/users/partial/{id}`\n\nAtualiza apenas campos espec√≠ficos de um usu√°rio existente (nome, e-mail, login ou endere√ßo).\n\nüîê **Requer token JWT**"
					},
					"response": []
				}
			],
			"description": "üìÅüë• **Users**\n\nCont√©m todas as opera√ß√µes relacionadas √† gest√£o de usu√°rios no sistema, como cadastro, consulta, atualiza√ß√£o completa ou parcial, altera√ß√£o de senha e exclus√£o. Todos os endpoints exigem autentica√ß√£o via token JWT, exceto o cadastro."
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "ADMIN",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.text();\r",
											"if(jsonData) { \r",
											"  pm.environment.set(\"token\", jsonData);\r",
											"  pm.collectionVariables.set(\"token\", jsonData)\r",
											"  console.log('token salvo')\r",
											"}else{\r",
											"    console.log('token nao salvo')\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"identificador\": \"admin\",\r\n    \"password\": \"123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"auth",
										"login"
									]
								},
								"description": "## üîê Login\n\n**POST /auth**\n\nRealiza a autentica√ß√£o do usu√°rio e retorna um **token JWT**.\n\nEsse token √© salvo automaticamente na vari√°vel \"`token\"` da cole√ß√£o, por meio de script, e usado em todas as requisi√ß√µes autenticadas."
							},
							"response": []
						}
					]
				},
				{
					"name": "RESTAURANT_OWNER",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.text();\r",
											"if(jsonData) { \r",
											"  pm.environment.set(\"token\", jsonData);\r",
											"  pm.collectionVariables.set(\"token\", jsonData)\r",
											"  console.log('token salvo')\r",
											"}else{\r",
											"    console.log('token nao salvo')\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"identificador\": \"paulo@gmail.com\",\r\n    \"password\": \"123456A78\",\r\n    \"restaurantId\": 2\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"auth",
										"login"
									]
								},
								"description": "## üîê Login\n\n**POST /auth**\n\nRealiza a autentica√ß√£o do usu√°rio e retorna um **token JWT**.\n\nEsse token √© salvo automaticamente na vari√°vel \"`token\"` da cole√ß√£o, por meio de script, e usado em todas as requisi√ß√µes autenticadas."
							},
							"response": []
						}
					]
				},
				{
					"name": "USER",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.text();\r",
											"if(jsonData) { \r",
											"  pm.environment.set(\"token\", jsonData);\r",
											"  pm.collectionVariables.set(\"token\", jsonData)\r",
											"  console.log('token salvo')\r",
											"}else{\r",
											"    console.log('token nao salvo')\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"identificador\": \"paulo@gmail.com\",\r\n    \"password\": \"123456A78\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"auth",
										"login"
									]
								},
								"description": "## üîê Login\n\n**POST /auth**\n\nRealiza a autentica√ß√£o do usu√°rio e retorna um **token JWT**.\n\nEsse token √© salvo automaticamente na vari√°vel \"`token\"` da cole√ß√£o, por meio de script, e usado em todas as requisi√ß√µes autenticadas."
							},
							"response": []
						},
						{
							"name": "Esqueci senha",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.text();\r",
											"if(jsonData) { \r",
											"  pm.environment.set(\"token\", jsonData);\r",
											"  pm.collectionVariables.set(\"token\", jsonData)\r",
											"  console.log('token salvo')\r",
											"}else{\r",
											"    console.log('token nao salvo')\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"paulo@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/auth/orgot-password",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"auth",
										"orgot-password"
									]
								},
								"description": "## üîê Login\n\n**POST /auth**\n\nRealiza a autentica√ß√£o do usu√°rio e retorna um **token JWT**.\n\nEsse token √© salvo automaticamente na vari√°vel \"`token\"` da cole√ß√£o, por meio de script, e usado em todas as requisi√ß√µes autenticadas."
							},
							"response": []
						},
						{
							"name": "Redefinir senha",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.text();\r",
											"if(jsonData) { \r",
											"  pm.environment.set(\"token\", jsonData);\r",
											"  pm.collectionVariables.set(\"token\", jsonData)\r",
											"  console.log('token salvo')\r",
											"}else{\r",
											"    console.log('token nao salvo')\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"paulo@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/auth/orgot-password",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"auth",
										"orgot-password"
									]
								},
								"description": "## üîê Login\n\n**POST /auth**\n\nRealiza a autentica√ß√£o do usu√°rio e retorna um **token JWT**.\n\nEsse token √© salvo automaticamente na vari√°vel \"`token\"` da cole√ß√£o, por meio de script, e usado em todas as requisi√ß√µes autenticadas."
							},
							"response": []
						}
					]
				}
			],
			"description": "üìÅüîê **Auth**\n\nCont√©m os endpoints respons√°veis pela autentica√ß√£o de usu√°rios. Permite o login e retorno de token JWT necess√°rio para acessar as demais rotas protegidas do sistema."
		},
		{
			"name": "Menu",
			"item": [
				{
					"name": "ADMIN",
					"item": [
						{
							"name": "Criar Menu",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"restaurante do paulo\",\r\n    \"description\": \"111\",\r\n    \"price\": \"cozinha normal\",\r\n    \"availability\": \"12:00\",\r\n    \"photo\": \"aaa\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/menu/restaurant/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"menu",
										"restaurant",
										"1"
									]
								},
								"description": "## üîê Login\n\n**POST /auth**\n\nRealiza a autentica√ß√£o do usu√°rio e retorna um **token JWT**.\n\nEsse token √© salvo automaticamente na vari√°vel \"`token\"` da cole√ß√£o, por meio de script, e usado em todas as requisi√ß√µes autenticadas."
							},
							"response": []
						},
						{
							"name": "Deletar Menu",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"restaurante do paulo\",\r\n    \"adress\": \"111\",\r\n    \"typeKitchen\": \"cozinha normal\",\r\n    \"openingHours\": \"12:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": ""
								},
								"description": "## üîê Login\n\n**POST /auth**\n\nRealiza a autentica√ß√£o do usu√°rio e retorna um **token JWT**.\n\nEsse token √© salvo automaticamente na vari√°vel \"`token\"` da cole√ß√£o, por meio de script, e usado em todas as requisi√ß√µes autenticadas."
							},
							"response": []
						},
						{
							"name": "Atualizar Menu",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"restaurante do paulo\",\r\n    \"description\": \"111\",\r\n    \"price\": \"cozinha normal\",\r\n    \"availability\": \"12:00\",\r\n    \"photo\": \"aaa\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/menu/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"menu",
										"1"
									]
								},
								"description": "## üîê Login\n\n**POST /auth**\n\nRealiza a autentica√ß√£o do usu√°rio e retorna um **token JWT**.\n\nEsse token √© salvo automaticamente na vari√°vel \"`token\"` da cole√ß√£o, por meio de script, e usado em todas as requisi√ß√µes autenticadas."
							},
							"response": []
						}
					]
				},
				{
					"name": "RESTAURANT OWNER",
					"item": [
						{
							"name": "Criar Menu",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"restaurante do paulo\",\r\n    \"description\": \"111\",\r\n    \"price\": \"cozinha normal\",\r\n    \"availability\": \"12:00\",\r\n    \"photo\": \"aaa\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/menu/owner",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"menu",
										"owner"
									]
								},
								"description": "## üîê Login\n\n**POST /auth**\n\nRealiza a autentica√ß√£o do usu√°rio e retorna um **token JWT**.\n\nEsse token √© salvo automaticamente na vari√°vel \"`token\"` da cole√ß√£o, por meio de script, e usado em todas as requisi√ß√µes autenticadas."
							},
							"response": []
						},
						{
							"name": "Deletar Menu",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"restaurante do paulo\",\r\n    \"adress\": \"111\",\r\n    \"typeKitchen\": \"cozinha normal\",\r\n    \"openingHours\": \"12:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/menu/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"menu",
										"1"
									]
								},
								"description": "## üîê Login\n\n**POST /auth**\n\nRealiza a autentica√ß√£o do usu√°rio e retorna um **token JWT**.\n\nEsse token √© salvo automaticamente na vari√°vel \"`token\"` da cole√ß√£o, por meio de script, e usado em todas as requisi√ß√µes autenticadas."
							},
							"response": []
						},
						{
							"name": "Atualizar Menu",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"restaurante do paulo\",\r\n    \"description\": \"111\",\r\n    \"price\": \"cozinha normal\",\r\n    \"availability\": \"12:00\",\r\n    \"photo\": \"aaa\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/menu/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"menu",
										"1"
									]
								},
								"description": "## üîê Login\n\n**POST /auth**\n\nRealiza a autentica√ß√£o do usu√°rio e retorna um **token JWT**.\n\nEsse token √© salvo automaticamente na vari√°vel \"`token\"` da cole√ß√£o, por meio de script, e usado em todas as requisi√ß√µes autenticadas."
							},
							"response": []
						},
						{
							"name": "Listar Menu",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/menu",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"menu"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "USER",
					"item": [
						{
							"name": "Listar Menu",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/menu/restaurant/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"menu",
										"restaurant",
										"1"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Restaurant",
			"item": [
				{
					"name": "ADMIN",
					"item": [
						{
							"name": "Criar Restaurante",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"restaurante do paulo\",\r\n    \"adress\": \"111\",\r\n    \"typeKitchen\": \"cozinha normal\",\r\n    \"openingHours\": \"12:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/restaurant/user/owner/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"restaurant",
										"user",
										"owner",
										"2"
									]
								},
								"description": "## üîê Login\n\n**POST /auth**\n\nRealiza a autentica√ß√£o do usu√°rio e retorna um **token JWT**.\n\nEsse token √© salvo automaticamente na vari√°vel \"`token\"` da cole√ß√£o, por meio de script, e usado em todas as requisi√ß√µes autenticadas."
							},
							"response": []
						}
					]
				},
				{
					"name": "RESTAURANT OWNER",
					"item": [
						{
							"name": "Listar restaurantes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/restaurant?page=0&size=20&sort=id,desc",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"restaurant"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "20"
										},
										{
											"key": "sort",
											"value": "id,desc"
										}
									]
								},
								"description": "## üîê Login\n\n**POST /auth**\n\nRealiza a autentica√ß√£o do usu√°rio e retorna um **token JWT**.\n\nEsse token √© salvo automaticamente na vari√°vel \"`token\"` da cole√ß√£o, por meio de script, e usado em todas as requisi√ß√µes autenticadas."
							},
							"response": []
						},
						{
							"name": "Criar Restaurante",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"restaurante do paulo\",\r\n    \"adress\": \"111\",\r\n    \"typeKitchen\": \"cozinha normal\",\r\n    \"openingHours\": \"12:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/restaurant",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"restaurant"
									]
								},
								"description": "## üîê Login\n\n**POST /auth**\n\nRealiza a autentica√ß√£o do usu√°rio e retorna um **token JWT**.\n\nEsse token √© salvo automaticamente na vari√°vel \"`token\"` da cole√ß√£o, por meio de script, e usado em todas as requisi√ß√µes autenticadas."
							},
							"response": []
						}
					]
				},
				{
					"name": "USER",
					"item": [
						{
							"name": "Listar todos os restaurantes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/restaurant/all?page=0&size=20&sort=id,desc",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"restaurant",
										"all"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "20"
										},
										{
											"key": "sort",
											"value": "id,desc"
										}
									]
								},
								"description": "## üîê Login\n\n**POST /auth**\n\nRealiza a autentica√ß√£o do usu√°rio e retorna um **token JWT**.\n\nEsse token √© salvo automaticamente na vari√°vel \"`token\"` da cole√ß√£o, por meio de script, e usado em todas as requisi√ß√µes autenticadas."
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Users Role",
			"item": [
				{
					"name": "ADMIN",
					"item": [
						{
							"name": "delete permission",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"login\": \"Paulo123\",\r\n    \"role\": \"ADMIN\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/users_type",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"users_type"
									]
								},
								"description": "## üîÑ Alterar Usu√°rio\n\n**PUT /users/{id}**\n\nAtualiza os dados de um usu√°rio j√° existente com base no ID informado.\n\nüîê **Requer token JWT**"
							},
							"response": []
						},
						{
							"name": "save permission",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"login\": \"Paulo123\",\r\n    \"role\": \"RESTAURANT_OWNER\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8081/users_type",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"users_type"
									]
								},
								"description": "## üîÑ Alterar Usu√°rio\n\n**PUT /users/{id}**\n\nAtualiza os dados de um usu√°rio j√° existente com base no ID informado.\n\nüîê **Requer token JWT**"
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "",
			"type": "string"
		}
	]
}